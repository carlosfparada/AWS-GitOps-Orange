---

- name: Get nodes from Inventory and add to Groups
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - include_role: 
      name: utils_hosts_aws

- name: Set Cisco, Arista passwords and AAP/Netbox setup
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files: vars/main.yml
  tasks:

  # cat private-key.pem | ansible-vault encrypt_string  --stdin-name 'private_key' --output private-key.vault
  - ansible.builtin.include_vars: files/private-key.yml

  - name: Copy private key locally
    ansible.builtin.copy:
      content: "{{ private_key }}"
      dest: /tmp/private-key.pem
      mode: '0600'

  - name: Set Cisco password
    ansible.builtin.expect:
      command: "ssh -o StrictHostKeyChecking=no -o PubkeyAcceptedKeyTypes=+ssh-rsa -o HostKeyAlgorithms=+ssh-rsa -i /tmp/private-key.pem ec2-user@{{ groups['cisco'][0] }}"
      responses:
        # ip-10-0-0-197# configure terminal
        # ip-10-0-0-197(config)# aaa new-model
        # ip-10-0-0-197(config)# aaa authentication login default local enable
        # ip-10-0-0-197(config)# username ec2-user password xxxx
        # ip-10-0-0-197(config)# exit
        # ip-10-0-0-197# exit
        'ip-*':
          - configure terminal
          - aaa new-model
          - aaa authentication login default local enable
          - username {{ ec2_cisco_user }} password {{ ec2_cisco_pass }}
          - hostname Cisco-1
        'Cisco-*':
          - exit
          - exit
          - exit
    no_log: false # hide passwords on logs

  - name: Set Arista password
    ansible.builtin.expect:
      command: "ssh -o StrictHostKeyChecking=no -i /tmp/private-key.pem ec2-user@{{ groups['arista'][0] }}"
      responses:
        # localhost> enable
        # localhost# configure terminal
        # localhost(config)# aaa authentication login default local
        # localhost(config)# username ec2-user secret 0 xxxx
        # localhost(config)# exit
        # localhost# exit
        'localhost*':
          - enable
          - configure terminal
          - aaa authentication login default local
          - username {{ ec2_arista_user }} secret 0 {{ ec2_arista_pass }}
          - hostname Arista-1
        'Arista-*':
          - exit
          - exit
          - exit
    no_log: false # hide passwords on logs

  - name: Set Juniper password
    ansible.builtin.expect:
      command: "ssh -o StrictHostKeyChecking=no -i /tmp/private-key.pem ec2-user@{{ groups['juniper'][0] }}"
      responses:
        # configure
        # set system services ssh
        # set system services ssh protocol-version v2
        # set system authentication-order [ password public-key ]
        # set system login user admin class super-user
        # set system login user admin authentication plain-text-password
        # set security zones security-zone trust interfaces ge-0/0/0 host-inbound-traffic system-services ssh
        # commit
        'ec2-user*>':
          - configure
          - request system reboot
        'ec2-user*#':
        # '{{ ec2_juniper_user }}*':
          - set system login user admin authentication plain-text-password
          - set system login user ec2-user class super-user
          - set system authentication-order password
          - set system host-name Juniper-1
          - set security forwarding-options family mpls mode packet-based # router mode
          - set security forwarding-options family iso mode packet-based # router mode
          - commit
          - exit
          - exit
          - exit
        'New password':
          - "{{ ec2_juniper_pass }}"
        'Retype new password':
          - "{{ ec2_juniper_pass }}"
        'Reboot the system ?*'
          - "yes"
    no_log: false # hide passwords on logs

  - name: Wait until Juniper to boot up
    wait_for:
      port: 22
      state: started
      timeout: 600
      delay: 30
      host: "{{ groups['juniper'][0] }}"